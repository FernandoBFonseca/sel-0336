;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23/05/2024 22:16:10
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF9F  	GOTO        318
_INTERRUPCAO_HIGH:
;main.c,20 :: 		void INTERRUPCAO_HIGH() iv 0x0008 ics ICS_AUTO {
0x0008	0xF015C000  	MOVFF       R0, 21
;main.c,31 :: 		if(INTCON.INT0IF)  // verifica se a INT0 ocorreu
0x000C	0xA2F2      	BTFSS       INTCON, 1 
0x000E	0xD00D      	BRA         L_INTERRUPCAO_HIGH0
;main.c,34 :: 		flag_isStarted = 1;
0x0010	0x0E01      	MOVLW       1
0x0012	0x6E17      	MOVWF       _flag_isStarted 
;main.c,35 :: 		tmr0h_save = TMR0H_1000ms;
0x0014	0x0E0B      	MOVLW       11
0x0016	0x6E18      	MOVWF       _tmr0h_save 
;main.c,36 :: 		tmr0l_save = TMR0L_1000ms;
0x0018	0x0EDC      	MOVLW       220
0x001A	0x6E19      	MOVWF       _tmr0l_save 
;main.c,37 :: 		ucContador = -1; LedDisplay(++ucContador);
0x001C	0x0EFF      	MOVLW       255
0x001E	0x6E16      	MOVWF       _ucContador 
0x0020	0x6A16      	CLRF        _ucContador 
0x0022	0x6A1A      	CLRF        FARG_LedDisplay_value 
0x0024	0xD837      	RCALL       _LedDisplay
;main.c,38 :: 		resetTimer();
0x0026	0xD825      	RCALL       _resetTimer
;main.c,40 :: 		INTCON.INT0IF = 0;
0x0028	0x92F2      	BCF         INTCON, 1 
;main.c,41 :: 		}
L_INTERRUPCAO_HIGH0:
;main.c,44 :: 		if(INTCON3.INT1IF)         // verifica se a INT1 ocorreu
0x002A	0xA0F0      	BTFSS       INTCON3, 0 
0x002C	0xD00D      	BRA         L_INTERRUPCAO_HIGH1
;main.c,47 :: 		flag_isStarted = 1;
0x002E	0x0E01      	MOVLW       1
0x0030	0x6E17      	MOVWF       _flag_isStarted 
;main.c,48 :: 		tmr0h_save = TMR0H_250ms;
0x0032	0x0EC2      	MOVLW       194
0x0034	0x6E18      	MOVWF       _tmr0h_save 
;main.c,49 :: 		tmr0l_save = TMR0L_250ms;
0x0036	0x0EF7      	MOVLW       247
0x0038	0x6E19      	MOVWF       _tmr0l_save 
;main.c,50 :: 		ucContador = -1; LedDisplay(++ucContador);
0x003A	0x0EFF      	MOVLW       255
0x003C	0x6E16      	MOVWF       _ucContador 
0x003E	0x6A16      	CLRF        _ucContador 
0x0040	0x6A1A      	CLRF        FARG_LedDisplay_value 
0x0042	0xD828      	RCALL       _LedDisplay
;main.c,51 :: 		resetTimer();
0x0044	0xD816      	RCALL       _resetTimer
;main.c,53 :: 		INTCON3.INT1IF = 0;
0x0046	0x90F0      	BCF         INTCON3, 0 
;main.c,54 :: 		}
L_INTERRUPCAO_HIGH1:
;main.c,56 :: 		if(INTCON.TMR0IF && flag_isStarted)    //Foi o TIMER0 que gerou a interrupção ?
0x0048	0xA4F2      	BTFSS       INTCON, 2 
0x004A	0xD010      	BRA         L_INTERRUPCAO_HIGH4
0x004C	0x5217      	MOVF        _flag_isStarted, 1 
0x004E	0xE00E      	BZ          L_INTERRUPCAO_HIGH4
L__INTERRUPCAO_HIGH21:
;main.c,58 :: 		LedDisplay(++ucContador);
0x0050	0x2A16      	INCF        _ucContador, 1 
0x0052	0xF01AC016  	MOVFF       _ucContador, FARG_LedDisplay_value
0x0056	0xD81E      	RCALL       _LedDisplay
;main.c,59 :: 		if(ucContador>=9) ucContador = -1;
0x0058	0x0E80      	MOVLW       128
0x005A	0x1816      	XORWF       _ucContador, 0 
0x005C	0x6E00      	MOVWF       R0 
0x005E	0x0E80      	MOVLW       128
0x0060	0x0A09      	XORLW       9
0x0062	0x5C00      	SUBWF       R0, 0 
0x0064	0xE302      	BNC         L_INTERRUPCAO_HIGH5
0x0066	0x0EFF      	MOVLW       255
0x0068	0x6E16      	MOVWF       _ucContador 
L_INTERRUPCAO_HIGH5:
;main.c,60 :: 		resetTimer();
0x006A	0xD803      	RCALL       _resetTimer
;main.c,62 :: 		}
L_INTERRUPCAO_HIGH4:
;main.c,64 :: 		}       // Fim do atendimento à interrupção
L_end_INTERRUPCAO_HIGH:
L__INTERRUPCAO_HIGH23:
0x006C	0xF000C015  	MOVFF       21, R0
0x0070	0x0011      	RETFIE      1
; end of _INTERRUPCAO_HIGH
_resetTimer:
;main.c,66 :: 		void resetTimer(){
;main.c,68 :: 		TMR0H = tmr0h_save;          //Recarregar o TIMER para 200ms
0x0072	0xFFD7C018  	MOVFF       _tmr0h_save, TMR0H
;main.c,69 :: 		TMR0L = tmr0l_save;
0x0076	0xFFD6C019  	MOVFF       _tmr0l_save, TMR0L
;main.c,71 :: 		INTCON.TMR0IF = 0;   //Não esquecer de zerar a Flag, pois é responsável por
0x007A	0x94F2      	BCF         INTCON, 2 
;main.c,73 :: 		}
L_end_resetTimer:
0x007C	0x0012      	RETURN      0
; end of _resetTimer
_ConfigInterrupt:
;main.c,104 :: 		void ConfigInterrupt()
;main.c,106 :: 		INTCON.GIE = 1;   //Chave Geral, Habilita o uso de interrupção
0x007E	0x8EF2      	BSF         INTCON, 7 
;main.c,107 :: 		RCON.IPEN = 0; //0 -> (default) herança da família PIC16F, onde existe apenas
0x0080	0x9ED0      	BCF         RCON, 7 
;main.c,111 :: 		TRISB.RB0 = 1;        //Pino RB0/INT0 como entrada
0x0082	0x8093      	BSF         TRISB, 0 
;main.c,112 :: 		INTCON2.INTEDG0 = 0 ;   //borda da INT0 descida
0x0084	0x9CF1      	BCF         INTCON2, 6 
;main.c,113 :: 		INTCON.INT0IF = 0;    //Flag responsável em gerar/acionar a interrupção
0x0086	0x92F2      	BCF         INTCON, 1 
;main.c,114 :: 		INTCON.INT0IE = 1;  //Habilita a interrupção específica INT0
0x0088	0x88F2      	BSF         INTCON, 4 
;main.c,116 :: 		TRISB.RB1 = 1;     // pino RB1/INT1 como entrada
0x008A	0x8293      	BSF         TRISB, 1 
;main.c,117 :: 		INTCON2.INTEDG1 = 0 ;   //borda da INT1 descida
0x008C	0x9AF1      	BCF         INTCON2, 5 
;main.c,118 :: 		INTCON3.INT1IF = 0;   // zera a flag da INT0 (vai p/ 1 quando a interrupção ocorrer)
0x008E	0x90F0      	BCF         INTCON3, 0 
;main.c,119 :: 		INTCON3.INT1IE = 1;       // habilita interrupção INT1
0x0090	0x86F0      	BSF         INTCON3, 3 
;main.c,125 :: 		}
L_end_ConfigInterrupt:
0x0092	0x0012      	RETURN      0
; end of _ConfigInterrupt
_LedDisplay:
;main.c,127 :: 		void LedDisplay(unsigned char value)  // Funcao para iluminar display 7seg
;main.c,129 :: 		switch (value)
0x0094	0xD020      	BRA         L_LedDisplay6
;main.c,131 :: 		case 0:{ latd = 0b00111111; break;}   // 0 no display de 7seg.
L_LedDisplay8:
0x0096	0x0E3F      	MOVLW       63
0x0098	0x6E8C      	MOVWF       LATD 
0x009A	0xD03C      	BRA         L_LedDisplay7
;main.c,132 :: 		case 1:{ latd = 0b00000110; break;}   // 1 no display de 7seg.
L_LedDisplay9:
0x009C	0x0E06      	MOVLW       6
0x009E	0x6E8C      	MOVWF       LATD 
0x00A0	0xD039      	BRA         L_LedDisplay7
;main.c,133 :: 		case 2:{ latd = 0b01011011; break;}   // 2 no display de 7seg.
L_LedDisplay10:
0x00A2	0x0E5B      	MOVLW       91
0x00A4	0x6E8C      	MOVWF       LATD 
0x00A6	0xD036      	BRA         L_LedDisplay7
;main.c,134 :: 		case 3:{ latd = 0b01001111; break;}   // 3 no display de 7seg.
L_LedDisplay11:
0x00A8	0x0E4F      	MOVLW       79
0x00AA	0x6E8C      	MOVWF       LATD 
0x00AC	0xD033      	BRA         L_LedDisplay7
;main.c,135 :: 		case 4:{ latd = 0b01100110; break;}   // 4 no display de 7seg.
L_LedDisplay12:
0x00AE	0x0E66      	MOVLW       102
0x00B0	0x6E8C      	MOVWF       LATD 
0x00B2	0xD030      	BRA         L_LedDisplay7
;main.c,136 :: 		case 5:{ latd = 0b01101101; break;}   // 5 no display de 7seg.
L_LedDisplay13:
0x00B4	0x0E6D      	MOVLW       109
0x00B6	0x6E8C      	MOVWF       LATD 
0x00B8	0xD02D      	BRA         L_LedDisplay7
;main.c,137 :: 		case 6:{ latd = 0b01111101; break;}   // 6 no display de 7seg.
L_LedDisplay14:
0x00BA	0x0E7D      	MOVLW       125
0x00BC	0x6E8C      	MOVWF       LATD 
0x00BE	0xD02A      	BRA         L_LedDisplay7
;main.c,138 :: 		case 7:{ latd = 0b00000111; break;}   // 7 no display de 7seg.
L_LedDisplay15:
0x00C0	0x0E07      	MOVLW       7
0x00C2	0x6E8C      	MOVWF       LATD 
0x00C4	0xD027      	BRA         L_LedDisplay7
;main.c,139 :: 		case 8:{ latd = 0b01111111; break;}   // 8 no display de 7seg.
L_LedDisplay16:
0x00C6	0x0E7F      	MOVLW       127
0x00C8	0x6E8C      	MOVWF       LATD 
0x00CA	0xD024      	BRA         L_LedDisplay7
;main.c,140 :: 		case 9:{ latd = 0b01101111; break;}   // 9 no display de 7seg.
L_LedDisplay17:
0x00CC	0x0E6F      	MOVLW       111
0x00CE	0x6E8C      	MOVWF       LATD 
0x00D0	0xD021      	BRA         L_LedDisplay7
;main.c,141 :: 		default:{ PORTD =0; break;} // zera todo o PORTD e
L_LedDisplay18:
0x00D2	0x6A83      	CLRF        PORTD 
0x00D4	0xD01F      	BRA         L_LedDisplay7
;main.c,143 :: 		}
L_LedDisplay6:
0x00D6	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00D8	0x0A00      	XORLW       0
0x00DA	0xE0DD      	BZ          L_LedDisplay8
0x00DC	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00DE	0x0A01      	XORLW       1
0x00E0	0xE0DD      	BZ          L_LedDisplay9
0x00E2	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00E4	0x0A02      	XORLW       2
0x00E6	0xE0DD      	BZ          L_LedDisplay10
0x00E8	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00EA	0x0A03      	XORLW       3
0x00EC	0xE0DD      	BZ          L_LedDisplay11
0x00EE	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00F0	0x0A04      	XORLW       4
0x00F2	0xE0DD      	BZ          L_LedDisplay12
0x00F4	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00F6	0x0A05      	XORLW       5
0x00F8	0xE0DD      	BZ          L_LedDisplay13
0x00FA	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x00FC	0x0A06      	XORLW       6
0x00FE	0xE0DD      	BZ          L_LedDisplay14
0x0100	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x0102	0x0A07      	XORLW       7
0x0104	0xE0DD      	BZ          L_LedDisplay15
0x0106	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x0108	0x0A08      	XORLW       8
0x010A	0xE0DD      	BZ          L_LedDisplay16
0x010C	0x501A      	MOVF        FARG_LedDisplay_value, 0 
0x010E	0x0A09      	XORLW       9
0x0110	0xE0DD      	BZ          L_LedDisplay17
0x0112	0xD7DF      	BRA         L_LedDisplay18
L_LedDisplay7:
;main.c,145 :: 		}
L_end_LedDisplay:
0x0114	0x0012      	RETURN      0
; end of _LedDisplay
_ConfigTIMER:
;main.c,88 :: 		void ConfigTIMER()
;main.c,98 :: 		T0CON = 0B00000100;  //TIMER_OFF, MOD_16BITS, TIMER, PRES_1:32
0x0116	0x0E04      	MOVLW       4
0x0118	0x6ED5      	MOVWF       T0CON 
;main.c,99 :: 		resetTimer();
0x011A	0xDFAB      	RCALL       _resetTimer
;main.c,100 :: 		INTCON.TMR0IE = 1;
0x011C	0x8AF2      	BSF         INTCON, 5 
;main.c,101 :: 		T0CON.TMR0ON = 1;   //Liga o TIMER0
0x011E	0x8ED5      	BSF         T0CON, 7 
;main.c,102 :: 		}
L_end_ConfigTIMER:
0x0120	0x0012      	RETURN      0
; end of _ConfigTIMER
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0122	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0124	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0128	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x012A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x012C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x012E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0130	0x0012      	RETURN      0
; end of ___CC2DW
_ConfigMCU:
;main.c,75 :: 		void ConfigMCU()
;main.c,77 :: 		ADCON1 |= 0X0F;    // pinos do microcontrolador como digitais
0x0132	0x0E0F      	MOVLW       15
0x0134	0x12C1      	IORWF       ADCON1, 1 
;main.c,79 :: 		TRISD = 0;       //Configurar os pinos de controle dos LEDs
0x0136	0x6A95      	CLRF        TRISD 
;main.c,80 :: 		PORTD = 0;      // inicialmente desligado
0x0138	0x6A83      	CLRF        PORTD 
;main.c,83 :: 		INTCON2.RBPU = 0; //RBPU é barrado, portanto acionado em 0
0x013A	0x9EF1      	BCF         INTCON2, 7 
;main.c,86 :: 		}
L_end_ConfigMCU:
0x013C	0x0012      	RETURN      0
; end of _ConfigMCU
_main:
0x013E	0x0EFF      	MOVLW       255
0x0140	0x6E16      	MOVWF       _ucContador 
0x0142	0x6A17      	CLRF        _flag_isStarted 
0x0144	0x0E0B      	MOVLW       11
0x0146	0x6E18      	MOVWF       _tmr0h_save 
0x0148	0x0EDC      	MOVLW       220
0x014A	0x6E19      	MOVWF       _tmr0l_save 
;main.c,148 :: 		void main() {
;main.c,149 :: 		ConfigMCU();           //pinos do MCU config. para acionar os LEDS
0x014C	0xDFF2      	RCALL       _ConfigMCU
;main.c,150 :: 		ConfigTIMER();         // tempo config. e TIMER ligado
0x014E	0xDFE3      	RCALL       _ConfigTIMER
;main.c,151 :: 		ConfigInterrupt(); //Configuração global das interrupções
0x0150	0xDF96      	RCALL       _ConfigInterrupt
;main.c,154 :: 		while(1) {  // Endless loop
L_main19:
;main.c,155 :: 		} //while
0x0152	0xD7FF      	BRA         L_main19
;main.c,156 :: 		} //main
L_end_main:
0x0154	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [106]    _INTERRUPCAO_HIGH
0x0072      [12]    _resetTimer
0x007E      [22]    _ConfigInterrupt
0x0094     [130]    _LedDisplay
0x0116      [12]    _ConfigTIMER
0x0122      [16]    ___CC2DW
0x0132      [12]    _ConfigMCU
0x013E      [24]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _ucContador
0x0017       [1]    _flag_isStarted
0x0018       [1]    _tmr0h_save
0x0019       [1]    _tmr0l_save
0x001A       [1]    FARG_LedDisplay_value
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [1]    INTCON3
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
